# Generated by Django 5.1.6 on 2025-03-26 12:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(error_messages={'unique': 'User with this username already exists. User dengan username ini sudah ada.'}, max_length=25, unique=True, validators=[django.core.validators.RegexValidator(message='Username is only allowed to contain letters, numbers, and the following characters: (.),(_),(-). Username hanya boleh berisi huruf, angka, dan karakter berikut: (.),(_),(-).', regex='^[a-zA-Z0-9._-]+$')])),
                ('name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Name is only allowed to contain letters and spaces. Nama hanya boleh berisi huruf dan spasi', regex='^[a-zA-Z\\s]+$')])),
                ('nomor_telepon', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('password_salt', models.CharField(max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('api_auth.user',),
        ),
        migrations.CreateModel(
            name='Petugas',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('jabatan', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('api_auth.user',),
        ),
    ]
